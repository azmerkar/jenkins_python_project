---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: s2i-nodejs
spec:
  workspaces:
    - name: mehmet
  params:
    - name: user
      type: string
    - name: pass
      type: string
    - name: image-name
      type: string
    - name: registry
      type: string
      default: "docker.io"
  steps:
    # - name: generate
    #   image: quay.io/openshift-pipeline/s2i
    #   workingDir: "$(workspaces.mehmet.path)"
    #   command: ["s2i", "build", ".", "registry.access.redhat.com/ubi8/nodejs-12", "--as-dockerfile", "/gensource/Dockerfile.gen"]
    #   volumeMounts:
    #     - name: gensource
    #       mountPath: /gensource

    - name: analyse
      image: quay.io/buildah/stable
      workingDir: "$(workspaces.mehmet.path)"
      script: |
         #!/usr/bin/env sh
         pwd 
         ls -all
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers

    - name: build
      image: quay.io/buildah/stable
      workingDir: "$(workspaces.mehmet.path)"
      command: ["buildah", "bud", "--tls-verify=false", "--layers", "-t", "$(params.registry)/$(params.user)/$(params.image-name)", "."]
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true

    - name: push
      image: quay.io/buildah/stable
      command: ['buildah', 'push', '--creds=$(params.user):$(params.pass)', '--tls-verify=false', '$(params.registry)/$(params.user)/$(params.image-name)', 'docker://$(params.registry)/$(params.user)/$(params.image-name)']
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        privileged: true
  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: gensource
      emptyDir: {}